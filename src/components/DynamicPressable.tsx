import {ViewStyle, StyleProp, Pressable, PressableProps} from 'react-native';
import React from 'react';

const DynamicPressable = ({
  children,
  backfaceVisibility,
  backgroundColor,
  borderBottomColor,
  borderBottomEndRadius,
  borderBottomLeftRadius,
  borderBottomRightRadius,
  borderBottomStartRadius,
  borderBottomWidth,
  borderColor,
  borderEndColor,
  borderLeftColor,
  borderLeftWidth,
  borderRadius,
  borderRightColor,
  borderRightWidth,
  borderStartColor,
  borderStyle,
  borderTopColor,
  borderTopEndRadius,
  borderTopLeftRadius,
  borderTopRightRadius,
  borderTopStartRadius,
  borderTopWidth,
  borderWidth,
  opacity,
  alignContent,
  alignItems,
  alignSelf,
  aspectRatio,
  borderEndWidth,
  borderStartWidth,
  bottom,
  display,
  end,
  flex,
  flexBasis,
  flexDirection,
  flexGrow,
  flexShrink,
  flexWrap,
  height,
  justifyContent,
  left,
  margin,
  marginBottom,
  marginEnd,
  marginHorizontal,
  marginLeft,
  marginRight,
  marginStart,
  marginTop,
  marginVertical,
  maxHeight,
  maxWidth,
  minHeight,
  minWidth,
  overflow,
  padding,
  paddingBottom,
  paddingEnd,
  paddingHorizontal,
  paddingLeft,
  paddingRight,
  paddingStart,
  paddingTop,
  paddingVertical,
  position,
  right,
  start,
  top,
  width,
  zIndex,
  direction,
  shadowColor,
  shadowOffset,
  shadowOpacity,
  shadowRadius,
  transform,
  style,
  ...rest
}: ViewStyle & PressableProps) => (
  <Pressable
    style={({pressed}) => [
      {
        backfaceVisibility,
        backgroundColor,
        borderBottomColor,
        borderBottomEndRadius,
        borderBottomLeftRadius,
        borderBottomRightRadius,
        borderBottomStartRadius,
        borderBottomWidth,
        borderColor,
        borderEndColor,
        borderLeftColor,
        borderLeftWidth,
        borderRadius,
        borderRightColor,
        borderRightWidth,
        borderStartColor,
        borderStyle,
        borderTopColor,
        borderTopEndRadius,
        borderTopLeftRadius,
        borderTopRightRadius,
        borderTopStartRadius,
        borderTopWidth,
        borderWidth,
        opacity,
        alignContent,
        alignItems,
        alignSelf,
        aspectRatio,
        borderEndWidth,
        borderStartWidth,
        bottom,
        display,
        end,
        flex,
        flexBasis,
        flexDirection,
        flexGrow,
        flexShrink,
        flexWrap,
        height,
        justifyContent,
        left,
        margin,
        marginBottom,
        marginEnd,
        marginHorizontal,
        marginLeft,
        marginRight,
        marginStart,
        marginTop,
        marginVertical,
        maxHeight,
        maxWidth,
        minHeight,
        minWidth,
        overflow,
        padding,
        paddingBottom,
        paddingEnd,
        paddingHorizontal,
        paddingLeft,
        paddingRight,
        paddingStart,
        paddingTop,
        paddingVertical,
        position,
        right,
        start,
        top,
        width,
        zIndex,
        direction,
        shadowColor,
        shadowOffset,
        shadowOpacity,
        shadowRadius,
        transform,
      } as StyleProp<ViewStyle>,
      style && (style as StyleProp<ViewStyle>),
      // {opacity: pressed ? 0.8 : 1},
    ]}
    {...rest}>
    {children}
  </Pressable>
);

export default DynamicPressable;
